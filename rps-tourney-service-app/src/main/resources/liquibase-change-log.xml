<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd"
	objectQuotingStrategy="QUOTE_ALL_OBJECTS">

	<property name="type.binary" value="binary(255)" dbms="hsqldb" />
	<property name="type.binary" value="bytea" dbms="postgresql" />
	<property name="type.gameId" value="varchar(10)" />

	<!-- This is required to work around https://hibernate.atlassian.net/browse/HHH-9427. -->
	<property name="fkColumnName.Game.id" value="GAMEID" dbms="hsqldb" />
	<property name="fkColumnName.Game.id" value="gameid" dbms="postgresql" />
	<property name="fkColumnName.LoginIdentity.id" value="LOGINIDENTITYID" dbms="hsqldb" />
	<property name="fkColumnName.LoginIdentity.id" value="loginidentityid" dbms="postgresql" />

	<!-- This was required to work around https://hibernate.atlassian.net/browse/HHH-9430 and https://hibernate.atlassian.net/browse/HHH-9431.
		As of change set 10, though, sequences are used for both DB platforms. -->
	<property name="option.autoIncrement" value="true" dbms="hsqldb" />
	<property name="option.autoIncrement" value="false" dbms="postgresql" />

	<changeSet id="1" author="karlmdavis">

		<createTable tableName="Accounts">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="createdTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
			<column name="name" type="varchar(40)" />
		</createTable>

		<createTable tableName="AccountRoles">
			<column name="accountId" type="bigint">
				<constraints primaryKey="true" nullable="false" foreignKeyName="AccountRolesToAccounts"
					referencedTableName="Accounts" />
			</column>
			<column name="role" type="varchar(50)">
				<constraints primaryKey="true" nullable="false" />
			</column>
		</createTable>

		<createTable tableName="AuthTokens">
			<column name="token" type="${type.binary}">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="accountId" type="bigint">
				<constraints nullable="false" foreignKeyName="AuthTokensToAccounts" referencedTableName="Accounts" />
			</column>
			<column name="createdTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
		</createTable>

		<createTable tableName="GameLoginIdentities">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="accountId" type="bigint">
				<constraints nullable="false" foreignKeyName="GameLoginIdentitiesToAccounts"
					referencedTableName="Accounts" />
			</column>
			<column name="createdTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
			<column name="emailAddress" type="varchar(255)">
				<constraints nullable="false" unique="true" />
			</column>
			<column name="passwordHash" type="varchar(255)">
				<constraints nullable="false" />
			</column>
		</createTable>

		<createTable tableName="GuestLoginIdentities">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="accountId" type="bigint">
				<constraints nullable="false" foreignKeyName="GuestLoginIdentitiesToAccounts"
					referencedTableName="Accounts" />
			</column>
		</createTable>

		<createTable tableName="Games">
			<column name="id" type="${type.gameId}">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="createdTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
			<column name="state" type="varchar(50)">
				<constraints nullable="false" />
			</column>
			<column name="maxRounds" type="int">
				<constraints nullable="false" />
			</column>
			<column name="player1Id" type="bigint">
				<constraints foreignKeyName="GamesToPlayers1" referencedTableName="Players" />
			</column>
			<column name="player2Id" type="bigint">
				<constraints foreignKeyName="GamesToPlayers2" referencedTableName="Players" />
			</column>
		</createTable>

		<createTable tableName="Players">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="humanAccountId" type="bigint">
				<constraints nullable="false" unique="true" foreignKeyName="PlayersToAccounts"
					referencedTableName="Accounts" />
			</column>
		</createTable>

		<createTable tableName="GameRounds">
			<column name="${fkColumnName.Game.id}" type="${type.gameId}">
				<constraints primaryKey="true" nullable="false" foreignKeyName="GameRoundsToGame"
					referencedTableName="Games" />
			</column>
			<column name="roundIndex" type="int">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="adjustedRoundIndex" type="int">
				<constraints nullable="false" />
			</column>
			<column name="throwForPlayer1" type="varchar(50)">
				<constraints nullable="true" />
			</column>
			<column name="throwForPlayer1Timestamp" type="timestamp" />
			<column name="throwForPlayer2" type="varchar(50)">
				<constraints nullable="true" />
			</column>
			<column name="throwForPlayer2Timestamp" type="timestamp" />
		</createTable>

		<!-- Create a TRIGGER-based constraint that ensures that GameRounds.throwForPlayerN can only ever be set once. This is
			required in the face of multiple conflicting concurrent requests, so that only one such request ever succeeds. -->
		<sqlFile path="trigger-GameRounds_throwProtect-hsqldb.sql" relativeToChangelogFile="true"
			splitStatements="false" dbms="hsqldb" />
		<sqlFile path="trigger-GameRounds_throwProtect-postgresql.sql" relativeToChangelogFile="true"
			splitStatements="false" dbms="postgresql" />

	</changeSet>

	<changeSet id="2" author="karlmdavis" dbms="postgresql">

		<createSequence sequenceName="accounts_id_seq" />
		<createSequence sequenceName="gameloginidentities_id_seq" />
		<createSequence sequenceName="guestloginidentities_id_seq" />
		<createSequence sequenceName="players_id_seq" />

	</changeSet>

	<changeSet id="3" author="karlmdavis">

		<!-- A new AbstractLoginIdentity base class was created for GameLoginIdentity and GuestLoginIdentity. As the webapp didn't
			yet support creating game logins, we truncate that table, and copy all guest login IDs into the new "base" table. -->

		<!-- Note, though, that this is right around where I realized that guest logins don't actually have any non-base data associated
			with them. I need to think about it some still, but they probably ought to have the AuthTokens, rather than those being associated
			directly with Accounts. -->

		<!-- This change set had a goof that had to be hacked out, as part of Issue #106. -->
		<validCheckSum>7:90bcfccbd78b4aa501e0d2cbe5d8db8b</validCheckSum>

		<!-- Create the new base table. -->
		<createTable tableName="LoginIdentities">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="accountId" type="bigint">
				<constraints nullable="false" foreignKeyName="LoginIdentitiesToAccounts" referencedTableName="Accounts" />
			</column>
			<column name="createdTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
		</createTable>

		<!-- Create base logins for each pre-existing guest login. -->
		<sql dbms="hsqldb, postgresql">
			INSERT INTO "LoginIdentities" ("id", "accountId",
			"createdTimestamp")
			SELECT "id", "accountId",
			'2015-01-19 12:00:00
			America/New_York'
			FROM "GuestLoginIdentities";
		</sql>

		<!-- Update the guest logins table to work with the new base table. -->
		<dropColumn tableName="GuestLoginIdentities" columnName="accountId" />

		<!-- Update the game logins table to work with the new base table. -->
		<sql dbms="hsqldb, postgresql">
			DELETE FROM "GameLoginIdentities";
		</sql>
		<addForeignKeyConstraint constraintName="GameLoginIdentitiesIdToLoginIdentitiesId"
			referencedTableName="LoginIdentities" baseColumnNames="id" baseTableName="GameLoginIdentities"
			referencedColumnNames="id" />
		<dropColumn tableName="GameLoginIdentities" columnName="accountId" />
		<dropColumn tableName="GameLoginIdentities" columnName="createdTimestamp" />

	</changeSet>

	<changeSet id="4" author="karlmdavis" dbms="postgresql">

		<createSequence sequenceName="loginidentities_id_seq" />

	</changeSet>

	<changeSet id="5" author="karlmdavis">

		<createTable tableName="AuditAccountMerges">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="mergeTimestamp" type="timestamp">
				<constraints nullable="false" />
			</column>
			<column name="targetAccountId" type="bigint">
				<constraints nullable="false" foreignKeyName="AuditAccountMergesToAccounts"
					referencedTableName="Accounts" />
			</column>
		</createTable>

		<createTable tableName="AuditAccountLoginMerges">
			<column name="auditAccountMergeId" type="bigint">
				<constraints primaryKey="true" nullable="false"
					foreignKeyName="AuditAccountLoginMergesToAuditAccountMerges" referencedTableName="AuditAccountMerges" />
			</column>
			<column name="${fkColumnName.LoginIdentity.id}" type="bigint">
				<constraints nullable="false" foreignKeyName="AuditAccountLoginMergesToLoginIdentities"
					referencedTableName="LoginIdentities" />
			</column>
		</createTable>

		<createTable tableName="AuditAccountGameMerges">
			<column name="id" type="bigint" autoIncrement="${option.autoIncrement}" startWith="1">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<column name="parentAuditAccountMergeId" type="bigint">
				<constraints nullable="false" foreignKeyName="AuditAccountGameMergesToAuditAccountMerges"
					referencedTableName="AuditAccountMerges" />
			</column>
			<column name="${fkColumnName.Game.id}" type="${type.gameId}">
				<constraints nullable="false" foreignKeyName="AuditAccountGameMergesToGames" referencedTableName="Games" />
			</column>
			<column name="playerRole" type="varchar(50)">
				<constraints nullable="false" />
			</column>
		</createTable>

	</changeSet>

	<changeSet id="6" author="karlmdavis" dbms="postgresql">

		<createSequence sequenceName="auditaccountmerges_id_seq" />
		<createSequence sequenceName="auditaccountgamemerges_id_seq" />

	</changeSet>

	<changeSet id="7" author="karlmdavis">

		<!-- Done as part of https://github.com/karlmdavis/rps-tourney/issues/64. -->
		<dropNotNullConstraint tableName="Players" columnName="humanAccountId" />
		<addColumn tableName="Players">
			<column name="builtInAi" type="varchar(50)">
				<constraints nullable="true" unique="true" />
			</column>
		</addColumn>

	</changeSet>

	<changeSet id="8" author="karlmdavis">

		<!-- These FK contraints were all missing, due to me forgetting to include the 'referencedColumnNames' attribute in my
			'createTable/column/constraints' directives, above. Fixed as part of https://github.com/karlmdavis/rps-tourney/issues/106. -->

		<addForeignKeyConstraint constraintName="AccountRolesToAccountsId"
			baseTableName="AccountRoles" baseColumnNames="accountId" referencedTableName="Accounts" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuthTokensToAccountsId" baseTableName="AuthTokens"
			baseColumnNames="accountId" referencedTableName="Accounts" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="GuestLoginIdentitiesToLoginIdentitiesId"
			baseTableName="GuestLoginIdentities" baseColumnNames="id" referencedTableName="LoginIdentities"
			referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="GamesToPlayersId1" baseTableName="Games"
			baseColumnNames="player1Id" referencedTableName="Players" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="GamesToPlayersId2" baseTableName="Games"
			baseColumnNames="player2Id" referencedTableName="Players" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="PlayersToAccountsId" baseTableName="Players"
			baseColumnNames="humanAccountId" referencedTableName="Accounts" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="GameRoundsToGamesId" baseTableName="GameRounds"
			baseColumnNames="${fkColumnName.Game.id}" referencedTableName="Games" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="LoginIdentitiesToAccountsId"
			baseTableName="LoginIdentities" baseColumnNames="accountId" referencedTableName="Accounts" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuditAccountMergesToAccountsId"
			baseTableName="AuditAccountMerges" baseColumnNames="targetAccountId" referencedTableName="Accounts"
			referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuditAccountLoginMergesToAuditAccountMergesId"
			baseTableName="AuditAccountLoginMerges" baseColumnNames="auditAccountMergeId"
			referencedTableName="AuditAccountMerges" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuditAccountLoginMergesToLoginIdentitiesId"
			baseTableName="AuditAccountLoginMerges" baseColumnNames="${fkColumnName.LoginIdentity.id}"
			referencedTableName="LoginIdentities" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuditAccountGameMergesToAuditAccountMergesId"
			baseTableName="AuditAccountGameMerges" baseColumnNames="parentAuditAccountMergeId"
			referencedTableName="AuditAccountMerges" referencedColumnNames="id" />
		<addForeignKeyConstraint constraintName="AuditAccountGameMergesToGamesId"
			baseTableName="AuditAccountGameMerges" baseColumnNames="${fkColumnName.Game.id}" referencedTableName="Games"
			referencedColumnNames="id" />

	</changeSet>

	<changeSet id="9" author="karlmdavis" dbms="postgresql">

		<!-- Note: This should have been done as part of change set 3 or 4. -->

		<dropSequence sequenceName="gameloginidentities_id_seq" />
		<dropSequence sequenceName="guestloginidentities_id_seq" />

	</changeSet>

	<changeSet id="10" author="karlmdavis" dbms="hsqldb">
		<!-- Start using sequences for IDs on HSQL, just like they are on PostgreSQL. -->

		<!-- Change the type of all auto-increment columns to remove the auto-incrementing. -->
		<modifyDataType tableName="Accounts" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="GameLoginIdentities" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="GuestLoginIdentities" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="Players" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="LoginIdentities" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="AuditAccountMerges" columnName="id" newDataType="bigint" />
		<modifyDataType tableName="AuditAccountGameMerges" columnName="id" newDataType="bigint" />

		<!-- Add all of the same sequences used in PostgreSQL. -->
		<createSequence sequenceName="accounts_id_seq" startValue="1" incrementBy="1" />
		<createSequence sequenceName="players_id_seq" startValue="1" incrementBy="1" />
		<createSequence sequenceName="loginidentities_id_seq" startValue="1" incrementBy="1" />
		<createSequence sequenceName="auditaccountmerges_id_seq" startValue="1" incrementBy="1" />
		<createSequence sequenceName="auditaccountgamemerges_id_seq" startValue="1" incrementBy="1" />

	</changeSet>

</databaseChangeLog>
