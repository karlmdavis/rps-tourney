<configuration scan="false">
	<!-- Required to ensure that JUL respects log level changes. -->
	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator" />

	<!-- A file-based logging target, which will rollover daily and clean up log archives older than 90 days. -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- Note the 'logs/' directory being used, which is required for Tomcat. -->
		<file>${rps.service.logs.path:-./logs}/${project.artifactId}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${rps.service.logs.path:-./logs}/${project.artifactId}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>90</maxHistory>
		</rollingPolicy>

		<encoder>
			<pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- There's a bug in this class' logging, that causes spurious exceptions if it's enabled at the debug level. -->
	<logger name="org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl" level="info" />

	<!-- These loggers will print all CXF requests/responses to the log, at the 'info' level (set to 'warn' or higher to disable
		them). Actually uses the application's custom LoggerForInbound and LoggerForOutbound classes, which attempt to exclude passwords
		from the log output. -->
	<logger name="org.apache.cxf.interceptor.LoggingInInterceptor" level="warn" />
	<logger name="org.apache.cxf.interceptor.LoggingOutInterceptor" level="warn" />

	<!-- Log at the INFO level and above by default, to the 'FILE' appender. -->
	<root level="info">
		<appender-ref ref="FILE" />
	</root>
</configuration>
